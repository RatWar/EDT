
Функция ЗапросДанных63(ТекстКоманды) Экспорт 
	Connection = Новый COMОбъект("ADODB.CONNECTION");
	Connection.ConnectionString = "Driver={PostgreSQL Unicode(x64)};data source=PostgreSQL35W";	
	Попытка            
		Connection.Open();            
	Исключение            
		Возврат Неопределено;
	КонецПопытки;
	Command = Новый COMObject("ADODB.Command"); 
	Command.ActiveConnection = Connection; 
	Command.CommandType = 1;	
	Command.CommandText = ТекстКоманды;
	Попытка
		RecordSet = Command.Execute(); 	
	Исключение
		Возврат Неопределено; 
	КонецПопытки;
	КоличествоКолонок = RecordSet.Fields.Count;
	ТЗ = Новый ТаблицаЗначений;
	Для НомерСтолбца = 0 По RecordSet.Fields.Count - 1 Цикл                 
		ИмяСтолбца = RecordSet.Fields.Item(НомерСтолбца).Name;                
		ТЗ.Колонки.Добавить(ИмяСтолбца);
	КонецЦикла;
	Пока НЕ RecordSet.EOF Цикл
        НоваяСтрока = ТЗ.Добавить();
        Для НомерКолонки = 0 По КоличествоКолонок - 1 Цикл
            НоваяСтрока[ТЗ.Колонки[НомерКолонки].Имя] = RecordSet.Fields(НомерКолонки).Value;
        КонецЦикла;
        RecordSet.MoveNext();
    КонецЦикла;
    RecordSet.Close();
    Connection.Close();
	Возврат ТЗ;
КонецФункции

Функция ЗапросДанных171(ТекстКоманды) Экспорт 
	Connection = Новый COMОбъект("ADODB.CONNECTION");
	Connection.ConnectionString = "Driver={PostgreSQL ANSI(x64)};data source=PostgreSQL30";	
	Попытка            
		Connection.Open();            
	Исключение            
		Возврат Неопределено;
	КонецПопытки;
	Command = Новый COMObject("ADODB.Command"); 
	Command.ActiveConnection = Connection; 
	Command.CommandType = 1;	
	Command.CommandText = ТекстКоманды;
	Попытка
		RecordSet = Command.Execute(); 	
	Исключение
		Возврат Неопределено; 
	КонецПопытки;
	КоличествоКолонок = RecordSet.Fields.Count;
	ТЗ = Новый ТаблицаЗначений;
	Для НомерСтолбца = 0 По RecordSet.Fields.Count - 1 Цикл                 
		ИмяСтолбца = RecordSet.Fields.Item(НомерСтолбца).Name;                
		ТЗ.Колонки.Добавить(ИмяСтолбца);
	КонецЦикла;
	Пока НЕ RecordSet.EOF Цикл
        НоваяСтрока = ТЗ.Добавить();
        Для НомерКолонки = 0 По КоличествоКолонок - 1 Цикл
            НоваяСтрока[ТЗ.Колонки[НомерКолонки].Имя] = RecordSet.Fields(НомерКолонки).Value;
        КонецЦикла;
        RecordSet.MoveNext();
    КонецЦикла;
    RecordSet.Close();
    Connection.Close();
	Возврат ТЗ;
КонецФункции

//Расшифровка строки в массив
//("Областной бюджет стационар","Фурацилин раствор 1:5000-300 мл Стерильно! Наружное. Для обработки ран","б/с до 01.01.21","мл (см3)",3000.000,1582.40,-3000.000,-1582.40,0.000,0.00,0.000,0.00)
Функция ЗапросДанных63РазобратьСтроку(ТекстКоманды) Экспорт 
	Connection = Новый COMОбъект("ADODB.CONNECTION");
	Connection.ConnectionString = "Driver={PostgreSQL Unicode(x64)};data source=PostgreSQL35W";	
	Попытка            
		Connection.Open();            
	Исключение            
		Возврат Неопределено;
	КонецПопытки;
	Command = Новый COMObject("ADODB.Command"); 
	Command.ActiveConnection = Connection; 
	Command.CommandType = 1;	
	Command.CommandText = ТекстКоманды;
	Попытка
		RecordSet = Command.Execute(); 	
	Исключение
		Возврат Неопределено; 
	КонецПопытки;
	Если RecordSet.EOF Тогда  // нет данных
		Возврат Неопределено;
	КонецЕсли; 
	СтрокаЗаписи = RecordSet.Fields(0).Value;
	МассивИзСтроки = РазобратьСтроку(СтрокаЗаписи);
	КоличествоКолонок = МассивИзСтроки.ВГраница();
	ТЗ = Новый ТаблицаЗначений;
	Для НомерСтолбца = 0 По КоличествоКолонок Цикл                 
		ИмяСтолбца = "N" + Строка(НомерСтолбца);                
		ТЗ.Колонки.Добавить(ИмяСтолбца);
	КонецЦикла;
	RecordSet.MoveFirst();
	Пока НЕ RecordSet.EOF Цикл                                           
	    НоваяСтрока = ТЗ.Добавить();
		СтрокаЗаписи = RecordSet.Fields(0).Value;
		МассивИзСтроки = РазобратьСтроку(СтрокаЗаписи);
	    Для НомерКолонки = 0 По КоличествоКолонок Цикл
	        НоваяСтрока[НомерКолонки] = МассивИзСтроки[НомерКолонки];
	    КонецЦикла;
	    RecordSet.MoveNext();
	КонецЦикла;
    RecordSet.Close();
    Connection.Close();
	Возврат ТЗ;
КонецФункции

Функция РазобратьСтроку(ИсходнаяСтрока)
	Результат = Новый Массив;
    ИсходнаяСтрока = Сред(ИсходнаяСтрока, 2, СтрДлина(ИсходнаяСтрока) - 2);
	ОткрытаКавычка = Ложь;   	
	НС = "";
	Для Счетчик = 1 По СтрДлина(ИсходнаяСтрока) Цикл
		СимволСтроки = Сред(ИсходнаяСтрока, Счетчик, 1);
		Если (СимволСтроки = Символ(44)) и (НЕ ОткрытаКавычка) Тогда
			Результат.Добавить(НС);
			НС = "";
		ИначеЕсли СимволСтроки = Символ(34) Тогда
			ОткрытаКавычка = НЕ ОткрытаКавычка;
			НС = НС + СимволСтроки;
		Иначе
			НС = НС + СимволСтроки;
		КонецЕсли;
	КонецЦикла;
	Результат.Добавить(НС);
	Возврат Результат;
КонецФункции

////альтернатива через регулярные выражения
//&НаКлиентеНаСервереБезКонтекста
//Функция РазобратьСтроку(ИсходнаяСтрока)
//	Результат = Новый Массив;
//	ИсходнаяСтрока = Сред(ИсходнаяСтрока, 2, СтрДлина(ИсходнаяСтрока) - 2);
//	RegExp = Новый COMОбъект("VBScript.RegExp");
//	RegExp.IgnoreCase = Ложь;  //Игнорировать регистр 
//	RegExp.Global = Истина;    //Поиск всех вхождений шаблона 
//	RegExp.MultiLine = Ложь;   //Многострочный режим 
//	RegExp.Pattern = "(?:^|,)(\""(?:[^\""]+|\""\"")*\""|[^,]*)";  //шаблон 
//	Matches = RegExp.Execute(ИсходнаяСтрока);
//	ЧислоВхождений = Matches.Count();
//	Для к = 0 По ЧислоВхождений - 1 Цикл
//		Match = Matches.Item(к);
//		SubMatches = Match.SubMatches;
//		ЧислоПодвыражений = SubMatches.Count();
//		Для н = 0 По ЧислоПодвыражений - 1 Цикл
//			SubMatch = SubMatches.Item(н);
//			Если SubMatch = "" Тогда
//				Продолжить;
//			КонецЕсли;    
//			Результат.Добавить(SubMatch);
//		КонецЦикла;    
//	КонецЦикла;
//	Возврат Результат;
//КонецФункции
