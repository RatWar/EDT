&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДобавитьИБ();
	УстановитьФлажки();
	ТаймерВкл = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЦветОбычный = Элементы.Пуск.ЦветФона;
КонецПроцедуры

&НаСервере
Процедура УстановитьФлажки()
	ЗапуститьТестирование = Ложь;
	ЗаблокироватьСеансы = Истина;
	УбитьСеансы = Истина;
	РазблокироватьСеансы = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СортироватьТабЧасть(Команда)
	ИмяКолонки = СтрЗаменить(Элементы.ИБ.ТекущийЭлемент.Имя, "ИБ", "");
	Объект.ИБ.Сортировать(ИмяКолонки + " " + Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура ДобавитьИБ()
	Выборка = Справочники.ОИМЦ_ИнформационныеБазы1С.Выбрать();
	Пока Выборка.Следующий() Цикл
		НС = Объект.ИБ.Добавить();
		НС.Имя = Выборка.Наименование;
		НС.Описание = Выборка.Описание;
		НС.Пароль = Выборка.ПарольАдминистратора;
		НС.ИмяОбр = Выборка.ЛогинДляОбработки;
		НС.ПарольОбр = Выборка.ПарольДляОбработки;
		НС.ЭтоРабочая = Выборка.ЭтоРабочая;
		НС.ЭтоФайловая = Выборка.ЭтоФайловая;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Каталог(Команда)
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытия.Заголовок = "Выберите каталог где лежит обновление";
	Оповещение = Новый ОписаниеОповещения("ВыборКаталога_Завершение", ЭтотОбъект);
	ДиалогОткрытия.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталога_Завершение(Результат, ДополнительныеПараметры) Экспорт
	ЗапуститьТестирование = Ложь;
	Если Результат = Неопределено Тогда
		Элементы.ДекорКаталог.Заголовок = "Каталог обновления";
		ЗаблокироватьСеансы = Ложь;
		УбитьСеансы = Ложь;
		ЗагрузитьКонф = Ложь;
		ОбновитьКонф = Ложь;
		РазблокироватьСеансы = Ложь;
		Возврат;
	КонецЕсли;
	КаталогОбновления = Результат[0];
	Элементы.ДекорКаталог.Заголовок = "Каталог обновления - " + КаталогОбновления;
	ЗаблокироватьСеансы = Истина;
	УбитьСеансы = Истина;
	ЗагрузитьКонф = Истина;
	ОбновитьКонф = Истина;
	РазблокироватьСеансы = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Обработка(Команда)
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытия.Заголовок = "Выберите файл обработки";
	Оповещение = Новый ОписаниеОповещения("ВыборОбработки_Завершение", ЭтотОбъект);
	ДиалогОткрытия.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыборОбработки_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Элементы.ДекорОбработка.Заголовок = "Обработка";
		ЗапуститьОбработку = Ложь;
		Возврат;
	КонецЕсли;
	ФайлОбработки = Результат[0];
	Элементы.ДекорОбработка.Заголовок = "Файл обработки - " + ФайлОбработки;
	ЗапуститьОбработку = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИБВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыборИБ = Объект.ИБ[ВыбраннаяСтрока].НомерСтроки;
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрокаСоединенияИнформационнойБазы());
	Если ПараметрыСоединения.Свойство("Ref") И ПараметрыСоединения.Свойство("Srvr") Тогда
		Если Объект.ИБ[ВыборИБ - 1].Имя = ПараметрыСоединения.Ref Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю("Нельзя обновить текущую базу");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	НС = ВводВывод.Добавить();
	НС.НомерИБ = ВыборИБ - 1;
	НС.Имя = Объект.ИБ[НС.НомерИБ].Имя;
КонецПроцедуры

&НаКлиенте
Процедура Пуск(Команда)
	Если НЕ ТаймерВкл Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПускСкрипта", ЭтотОбъект), "Выполнить действия?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПускСкрипта(РезультатВопроса, Параметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполнитьСкрипт();
	КонецЕсли;
КонецПроцедуры

// Основная процедура, выполняет скрипт
&НаКлиенте
Процедура ВыполнитьСкрипт() Экспорт
	Элементы.ДекорСтарт.Заголовок = "Старт " + ОбщегоНазначенияКлиент.ДатаСеанса();
	Если ЗагрузитьКонф Тогда
		ЗаблокироватьСеансы = Истина;
		УбитьСеансы = Истина;
		ЗапуститьТестирование = Ложь;
	КонецЕсли;
	Если ЗаблокироватьСеансы ИЛИ УбитьСеансы Тогда
		РазблокироватьСеансы = Истина;
	Иначе
		РазблокироватьСеансы = Ложь;
	КонецЕсли;
	Счетчик = -1;
	Для каждого Элемент Из ВводВывод Цикл
		Счетчик = Счетчик + 1;
		ЭтаФорма.ОбновитьОтображениеДанных();
		КодВозврата = Неопределено;
		Если ЗапуститьОбработку Тогда
			СтрокаКоманды = ПолучитьКоманду_Обработка(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].ИмяОбр,
					Объект.ИБ[Элемент.НомерИБ].ПарольОбр);
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Обработка...";
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка в обработке";
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если ЗаблокироватьСеансы Тогда
			Если НЕ БлокироватьСеанс(Счетчик, Элемент) Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли;
		Если УбитьСеансы Тогда
			СтрокаКоманды = CommandSession(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].Пароль, "kill");
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Убиваю сессии";
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при убийстве";
				Перейти ~Разблокировка;
			КонецЕсли;
		КонецЕсли;
		Если ЗагрузитьКонф Тогда
			СтрокаКоманды = CommandLoadcfg(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].Пароль);
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Загрузка конфигурации";
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при загрузке";
				Перейти ~Разблокировка;
			КонецЕсли;
			Объект.ИБ[Элемент.НомерИБ].ЗагруженаКонф = Истина;
		КонецЕсли;
		Если ОбновитьКонф Тогда
			СтрокаКоманды = CommandDbupdate(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].Пароль);
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Обновление конфигурации";
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при обновлении";
				Перейти ~Разблокировка;
			КонецЕсли;
			Объект.ИБ[Элемент.НомерИБ].ОбновленаКонф = Истина;
		КонецЕсли;
		~Разблокировка :
		Если РазблокироватьСеансы Тогда
			СтрокаКоманды = CommandSession(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].Пароль, "unlock");
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Разблокированы сессии";
			Если Объект.ИБ[Элемент.НомерИБ].ОбновленаКонф Тогда
				ВводВывод[Счетчик].Этап = "Успешно обновлено";
			КонецЕсли;
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при разблокировке";
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если ЗапускПредприятия Тогда
			СтрокаКоманды = CommandRun(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].ИмяОбр,
					Объект.ИБ[Элемент.НомерИБ].ПарольОбр);
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Запуск 1С:Предприятие";
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при запуске";
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Если ЗапуститьТестирование Тогда
			СтрокаКоманды = ПолучитьКоманду_Тестирование(Элемент.Имя, Объект.ИБ[Элемент.НомерИБ].Пароль);
			ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
			ВводВывод[Счетчик].Этап = "Тестирование...";
			ЛогФайл = Новый ЗаписьТекста("C:\Users\control\Documents\Work\Work\1.txt", , Истина);
			ЛогФайл.ЗаписатьСтроку(Элемент.Имя);
			ЛогФайл.Закрыть();
			ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
			УдалитьФайлы(ИмяФайла);
			Если КодВозврата <> 0 Тогда
				ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при тестировании";
				Продолжить;
			Иначе
				ВводВывод[Счетчик].Этап = "Протестировано";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	~Конец :
	Элементы.ДекорФиниш.Заголовок = "Финиш " + ОбщегоНазначенияКлиент.ДатаСеанса();
КонецПроцедуры

&НаКлиенте
Функция ЗаписьЛога(База, Текст)
	Время = ОбщегоНазначенияКлиент.ДатаСеанса();
	ТекстКоманды = СтрШаблон("INSERT into LogTools (DT, Condition, NameIB) values ('%1', '%2', '%3');", Время, Текст, База);
	Возврат ОИМЦ_ДанныеКлиент.ЗаписьДанныхЛог(ТекстКоманды);			
КонецФункции

&НаКлиенте 
Функция БлокироватьСеанс(Счетчик, База)
	КодВозврата = Неопределено;
	СтрокаКоманды = CommandSession(База.Имя, Объект.ИБ[База.НомерИБ].Пароль, "lock");
	ЗаписьЛога(База.Имя, СтрокаКоманды);
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ВводВывод[Счетчик].Этап = "Блокировка сессий";
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при блокировке";
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция УбитьСеанс(Счетчик, База)
	КодВозврата = Неопределено;
	СтрокаКоманды = CommandSession(База.Имя, Объект.ИБ[База.НомерИБ].Пароль, "kill");
	ЗаписьЛога(База.Имя, СтрокаКоманды);
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ВводВывод[Счетчик].Этап = "Убиваю сессии";
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при убийстве";
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;	
КонецФункции   

&НаКлиенте
Функция РазблокироватьСеанс(Счетчик, База)
	КодВозврата = Неопределено;
	СтрокаКоманды = CommandSession(База.Имя, Объект.ИБ[База.НомерИБ].Пароль, "unlock");
	ЗаписьЛога(База.Имя, СтрокаКоманды);
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ВводВывод[Счетчик].Этап = "Разблокированы сессии";
	Если Объект.ИБ[База.НомерИБ].ОбновленаКонф Тогда
		ВводВывод[Счетчик].Этап = "Успешно обновлено";
	КонецЕсли;
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при разблокировке";
		Возврат Ложь;
	КонецЕсли;	
	Возврат Истина;
КонецФункции  

&НаКлиенте
Функция ЗагрузитьКонфигурацию(Счетчик, База)
	КодВозврата = Неопределено;
	СтрокаКоманды = CommandLoadcfg(База.Имя, Объект.ИБ[База.НомерИБ].Пароль);
	ЗаписьЛога(База.Имя, СтрокаКоманды);
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ВводВывод[Счетчик].Этап = "Загрузка конфигурации";
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при загрузке";
		Возврат Ложь;
	КонецЕсли;
	Объект.ИБ[База.НомерИБ].ЗагруженаКонф = Истина;
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ОбновитьКонфигурацию(Счетчик, База)
	КодВозврата = Неопределено;
	СтрокаКоманды = CommandDbupdate(База.Имя, Объект.ИБ[База.НомерИБ].Пароль);
	ЗаписьЛога(База.Имя, СтрокаКоманды);
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ВводВывод[Счетчик].Этап = "Обновление конфигурации";
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		ВводВывод[Счетчик].Инфо = ВводВывод[Счетчик].Инфо + "Ошибка при обновлении";
		Возврат Ложь;
	КонецЕсли;
	Объект.ИБ[База.НомерИБ].ОбновленаКонф = Истина;
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция CommandSession(БД, Пароль, Действие)
	Если Действие = "lock" Тогда
		Стр1 = "deployka session lock";
	ИначеЕсли Действие = "kill" Тогда
		Стр1 = "deployka session kill";
	Иначе
		Стр1 = "deployka session unlock";
	КонецЕсли;
	Стр2 = " -ras 192.168.1.170:1545 -rac ""C:\Program Files\1cv8\8.3.13.1644\bin\rac.exe""";
	// Стр2 = " -ras 192.168.1.170:1545 -rac ""C:\Program Files\1cv8\8.3.18.1208\bin\rac.exe""";
	Стр3 = " -db ";
	Стр5 = " -db-user ""Администратор"" -db-pwd ";
	Стр6 = " -lockmessage ""Плановое обновление"" -lockuccode update";
	Возврат Стр1 + Стр2 + Стр3 + БД + Стр5 + Пароль + Стр6;
КонецФункции

&НаКлиенте
Функция CommandLoadcfg(БД, Пароль)
	//Стр1 = "deployka loadcfg ";
	//Стр2 = """/IBConnectionString""";
	//Стр3 = """Srvr=192.168.1.170;Ref='";
	//Стр4 = "'"""""" """;
	//Стр5 = """ -db-user ""Администратор"" -db-pwd ";
	//Стр6 = " -uccode update /mode -load";
	//Возврат Стр1 + Стр2 + Стр3 + БД + Стр4 + КаталогОбновления + Стр5 + Пароль + Стр6;
	Возврат СтрШаблон("deployka loadcfg ""/IBConnectionString""""Srvr=192.168.1.170;Ref='%1'"""""" ""%2"" -db-user ""Администратор"" -db-pwd %3 -uccode update /mode -load", 
						БД, КаталогОбновления, Пароль);
КонецФункции

&НаКлиенте
Функция CommandDbupdate(БД, Пароль)
	//Стр1 = "deployka dbupdate ";
	//Стр2 = """/IBConnectionString""";
	//Стр3 = """Srvr=192.168.1.170;Ref='";
	//Стр4 = "'""""""";
	//Стр5 = " -db-user ""Администратор"" -db-pwd ";
	//Стр6 = " -uccode update";
	//Возврат Стр1 + Стр2 + Стр3 + БД + Стр4 + Стр5 + Пароль + Стр6;
	Возврат СтрШаблон("deployka dbupdate ""/IBConnectionString""""Srvr=192.168.1.170;Ref='%1'"""""" -db-user ""Администратор"" -db-pwd %2 -uccode update",
						БД, Пароль);
КонецФункции

&НаКлиенте
Функция CommandRun(БД, Имя, Пароль)
	Стр1 = "set RUNNER_IBCONNECTION=""/S192.168.1.170/" + БД + """" + Символы.ПС;
	Стр2 = "set RUNNER_DBUSER=" + Имя + Символы.ПС;
	Стр3 = "set RUNNER_DBPWD=" + Пароль + Символы.ПС;
	Стр4 = "runner run --command ""ЗапуститьОбновлениеИнформационнойБазы;ЗавершитьРаботуСистемы;""" +
		" --execute $runnerRoot\epf\ЗакрытьПредприятие.epf";
	Возврат Стр1 + Стр2 + Стр3 + Стр4;
КонецФункции

&НаКлиенте
Функция ПолучитьКоманду_Обработка(БД, Имя, Пароль)
	Стр1 = "set RUNNER_IBCONNECTION=""/S192.168.1.170/" + БД + """" + Символы.ПС;
	Стр2 = "set RUNNER_DBUSER=" + Имя + Символы.ПС;
	Стр3 = "set RUNNER_DBPWD=" + Пароль + Символы.ПС;
	Стр4 = "runner run" + " --execute " + ФайлОбработки;
	Возврат Стр1 + Стр2 + Стр3 + Стр4;
КонецФункции

&НаКлиенте
Функция ПолучитьКоманду_Тестирование(БД, Пароль)
	Стр1 = """C:\Program Files\1cv8\8.3.13.1644\bin\1cv8.exe"" DESIGNER /IBConnectionString ";
	//Стр1 = """C:\Program Files\1cv8\8.3.18.1208\bin\1cv8.exe"" DESIGNER /IBConnectionString ";
	Стр2 = """Srvr=192.168.1.170;Ref='";
	Стр3 = "'""";
	Стр4 = " /n ""Администратор"" /p """;
	Стр5 = """";
	Стр6 = " /IBCheckAndRepair -LogAndRefsIntegrity -RecalcTotals -IBCompression -Rebuild -BadRefClear -BadDataDelete " +
		"/Out C:\Users\control\Documents\Work\Work\1.txt -NoTruncate";
	Возврат Стр1 + Стр2 + БД + Стр3 + Стр4 + Пароль + Стр5 + Стр6;
КонецФункции

&НаКлиенте
Функция СоздатьКомандныйФайл(СтрокаКоманды)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("cmd");
	Текст = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаТекста.OEM);
	Текст.ЗаписатьСтроку(СтрокаКоманды);
	Текст.Закрыть();
	Возврат ИмяВременногоФайла;
КонецФункции

&НаКлиенте
Процедура ДобавитьВсе(Команда)
    ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрокаСоединенияИнформационнойБазы());
	Если ПараметрыСоединения.Свойство("Ref") И ПараметрыСоединения.Свойство("Srvr") Тогда
		Для каждого Элемент Из Объект.ИБ Цикл
			Если Элемент.Имя = ПараметрыСоединения.Ref Тогда
				Продолжить;
			КонецЕсли;
			Если Элемент.ЭтоРабочая Тогда
				ВыборИБ = Элемент.НомерСтроки;
				НС = ВводВывод.Добавить();
				НС.НомерИБ = ВыборИБ - 1;
				НС.Имя = Элемент.Имя;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого Элемент Из Объект.ИБ Цикл
			Если Элемент.ЭтоРабочая Тогда
				ВыборИБ = Элемент.НомерСтроки;
				НС = ВводВывод.Добавить();
				НС.НомерИБ = ВыборИБ - 1;
				НС.Имя = Элемент.Имя;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаймерОжидания(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаВремени", ЭтотОбъект);
	ПоказатьВводЧисла(Оповещение, , "Введите время в минутах");
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаВремени(Результат, Параметры) Экспорт
	ЧислоСекунд = 60;
	Если Не Результат = Неопределено Тогда
		Элементы.Пуск.ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветОсобогоТекста");
		ТаймерВкл = Истина;
		Элементы.ДекорТаймер.Заголовок = "Время выполнения " + Результат + " мин.";
		Элементы.ТаймерОжидания.Картинка = БиблиотекаКартинок.ВыборКомпоновкиДанных;
		ВремяТаймера = Результат * ЧислоСекунд;
		Элементы.ДекорСтарт.Заголовок = "Старт " + Строка(ОбщегоНазначенияКлиент.ДатаСеанса() + ВремяТаймера);
		ПодключитьОбработчикОжидания("ВыполнитьСкрипт", ВремяТаймера, Истина);
	Иначе
		Элементы.Пуск.ЦветФона = ЦветОбычный;
		ТаймерВкл = Ложь;
		Элементы.ДекорТаймер.Заголовок = "Время выполнения";
		Элементы.ТаймерОжидания.Картинка = БиблиотекаКартинок.ВыборКомпоновкиДанныхНедоступный;
		Элементы.ДекорСтарт.Заголовок = "Старт";
		ОтключитьОбработчикОжидания("ВыполнитьСкрипт");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДоступа(Команда)
	Элементы.ДекорПроверка.Картинка = БиблиотекаКартинок.Вопрос32;
	КодВозврата = Неопределено;
	СтрокаКоманды = """C:\Program Files\1cv8\8.3.13.1644\bin\rac.exe"" cluster 192.168.1.170:1545 list";
	//СтрокаКоманды = """C:\Program Files\1cv8\8.3.18.1208\bin\rac.exe"" cluster 192.168.1.170:1545 list";
	ИмяФайла = СоздатьКомандныйФайл(СтрокаКоманды);
	ЗапуститьПриложение(ИмяФайла, , Истина, КодВозврата);
	УдалитьФайлы(ИмяФайла);
	Если КодВозврата <> 0 Тогда
		Элементы.ДекорПроверка.Картинка = БиблиотекаКартинок.Ошибка32;
	Иначе
		Элементы.ДекорПроверка.Картинка = БиблиотекаКартинок.Успешно32;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Тестирование(Команда)
	Элементы.ДекорКаталог.Заголовок = "Каталог обновления";
	ЗапуститьТестирование = Истина;
	ЗаблокироватьСеансы = Истина;
	УбитьСеансы = Истина;
	ЗагрузитьКонф = Ложь;
	ОбновитьКонф = Ложь;
	РазблокироватьСеансы = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Конфигуратор(Команда)
	СтрокаКоманды = ПолучитьКоманду_Конфигуратор(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Имя, 
			ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Пароль, ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ЭтоФайловая);
	ЗапуститьПриложение(СтрокаКоманды);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоманду_Конфигуратор(БД, Пароль, ЭтоФайловая)
	Если ЭтоФайловая Тогда
		Стр1 = """C:\Program Files\1cv8\8.3.13.1644\bin\1cv8.exe"" DESIGNER /F ";
		Стр2 = "";
		Стр3 = "";
		Стр4 = " /n ""Администратор"" /p """;
		Стр5 = """";
	Иначе
		Стр1 = """C:\Program Files\1cv8\8.3.13.1644\bin\1cv8.exe"" DESIGNER /IBConnectionString ";
		Стр2 = """Srvr=192.168.1.170;Ref='";
		Стр3 = "'""";
		Стр4 = " /n ""Администратор"" /p """;
		Стр5 = """";
	КонецЕсли;
	Возврат Стр1 + Стр2 + БД + Стр3 + Стр4 + Пароль + Стр5;
КонецФункции

&НаКлиенте
Процедура Предприятие(Команда)
	СтрокаКоманды = ПолучитьКоманду_Предприятие(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Имя,
			ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ПарольОбр, ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.ЭтоФайловая);
	ЗапуститьПриложение(СтрокаКоманды);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоманду_Предприятие(БД, Пароль, ЭтоФайловая)
	Если ЭтоФайловая Тогда
		Стр1 = """C:\Program Files\1cv8\8.3.13.1644\bin\1cv8.exe"" ENTERPRISE /F ";
		Стр2 = "";
		Стр3 = "";
		Стр4 = " /n ""ОИМЦ"" /p """;
		Стр5 = """";
	Иначе
		Стр1 = """C:\Program Files\1cv8\8.3.13.1644\bin\1cv8.exe"" ENTERPRISE /IBConnectionString ";
		Стр2 = """Srvr=192.168.1.170;Ref='";
		Стр3 = "'""";
		Стр4 = " /n ""ОИМЦ"" /p """;
		Стр5 = """";
	КонецЕсли;
	Возврат Стр1 + Стр2 + БД + Стр3 + Стр4 + Пароль + Стр5;
КонецФункции

&НаКлиенте
Процедура СбросСеансов(Команда)
	Счетчик = -1;
	Для каждого Элемент Из ВводВывод Цикл
		Счетчик = Счетчик + 1;
		Если НЕ БлокироватьСеанс(Счетчик, Элемент) Тогда
			Продолжить;
		КонецЕсли;
		УбитьСеанс(Счетчик, Элемент); 
		РазблокироватьСеанс(Счетчик, Элемент);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Обновление(Команда)
	Счетчик = -1;
	Для каждого Элемент Из ВводВывод Цикл
		Счетчик = Счетчик + 1;
		Если НЕ БлокироватьСеанс(Счетчик, Элемент) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ УбитьСеанс(Счетчик, Элемент) Тогда
			РазблокироватьСеанс(Счетчик, Элемент);
			Продолжить;
		КонецЕсли;
		Если НЕ ЗагрузитьКонфигурацию(Счетчик, Элемент) Тогда
			РазблокироватьСеанс(Счетчик, Элемент);
			Продолжить;
		КонецЕсли;
		ОбновитьКонфигурацию(Счетчик, Элемент);
		РазблокироватьСеанс(Счетчик, Элемент);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОт1С(Команда)
	Текст = "SELECT Beginning, Ending, Condition, NameIB FROM Synchronization;";
	Т = ОИМЦ_ДанныеКлиент.ЗапросДанныхЛог(Текст);
КонецПроцедуры
